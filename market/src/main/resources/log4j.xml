<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- OFF ,FATAL ,ERROR ,WARN ,INFO ,DEBUG ,ALL。  -->

	<!--
		========================== 自定义输出格式说明================================
	-->
	<!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
	<!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数  -->
	<!-- #%c 输出所属的类目，通常就是所在类的全名 -->
	<!-- #%t 输出产生该日志事件的线程名 -->
	<!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->
	<!--
		#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd
		HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
	-->
	<!--
		#%l
		输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)-->
	<!--==========================================================================-->

	<!--========================== 输出方式说明================================-->
	<!-- Log4j提供的appender有以下几种:  -->
	<!-- org.apache.log4j.ConsoleAppender(控制台),  -->
	<!-- org.apache.log4j.FileAppender(文件),  -->
	<!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->
	<!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->
	<!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->
	<!--
		==========================================================================
	-->

	<!-- 输出到控制台中 开发阶段设置DEBUG，生产阶段设置INFO-->
	<appender name="console" class="org.apache.log4j.ConsoleAppender" >
		<param name="Threshold" value="DEBUG" /> 
		<!--<param name="filter" value="DEBUG" />-->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] - %m [%t] (%c:%L)%n" />
		</layout>
	</appender>

	<!-- 输出到ERROR日志文件  -->
	<appender name="filelog_error" class="org.apache.log4j.RollingFileAppender">
		<!-- 设置File参数：日志输出文件名 -->
		<param name="File" value="${hujiao-admin.root}/market-error.log" />
		<param name="Threshold" value="ERROR" /> 
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
		<param name="Append" value="true" />
		<!-- 设置文件大小 -->
		<param name="MaxFileSize" value="2MB" />
		<!-- 设置文件备份 -->
		<param name="MaxBackupIndex" value="5" />
		<!--<param name="filter" value="ERROR" />-->
		<!-- 设置输出文件项目和格式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] (%c:%L) - %m%n" />
		</layout>
	</appender>

	<!-- 输出到日志文件 每天一个日志  -->
	<appender name="filelog_info" class="org.apache.log4j.RollingFileAppender">
		<param name="File" value="${hujiao-admin.root}/market-info.log" />
		<param name="Threshold" value="ALL" /> 
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
		<param name="Append" value="true" />
		<!-- 设置文件大小 -->
		<param name="MaxFileSize" value="10MB" />
		<!-- 设置文件备份 -->
		<param name="MaxBackupIndex" value="5" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] (%c:%L) - %m%n" />
		</layout>
	</appender>	
	
	<!-- specify the logging level for loggers from other libraries -->
	<logger name="*">
    	 <level value="ALL" />
    </logger>
    <logger name="org.springframework">
    	 <level value="INFO" />
    </logger>
    <logger name="com.opensymphony">
    	<level value="INFO" />
    </logger>

    <logger name="org.apache.struts2">
    	 <level value="INFO" />
    </logger>
    
    <logger name="com.mchange.v2">
    	 <level value="INFO" />
    </logger>	
    
    <logger name="org.hibernate">
    	 <level value="INFO" />
    </logger>
	<!-- 
    
    <logger name="com.ciasws">
    	 <level value="ALL" />
    </logger>-->
	<!-- 为控制台设置包限制输出的通道 -->
	<!-- <category name="com" additivity="false"> -->
	<!-- 	日志输出级别，起码可以有5个级别，可以扩展自己的级别，邮件发送必须是ERROR级别不好用，所以最后自己扩展一个邮件发送级别 -->
	<!-- 	<level value="ALL" /> -->
	<!-- 	<appender-ref ref="console" />  -->
	<!-- 	<appender-ref ref="filelog_error" />  -->
	<!-- 	<appender-ref ref="filelog_info" /> -->
	<!-- </category>	 -->
	
	<!--
		设置邮件模式 
		<appender name="EMAIL_QQ" class="org.apache.log4j.net.SMTPAppender"> 
			<param name="Threshold" value="INFO"/> 
			<param name="BufferSize" value="128" /> 
			<param name="SMTPHost" value="smtp.qq.com" /> 
			<param name="SMTPUsername" value="cjjvictory" /> 
			<param name="SMTPPassword" value="***" /> 
			<param name="From" value="cjjvictory@qq.com" /> 
			<param name="To" value="cjjvictory@gmail.com" /> 
			<param name="Subject" value="测试邮件发送" /> 
			<param name="LocationInfo" value="true" /> 
			<param name="SMTPDebug" value="true" /> 
			<layout class="org.cjj.log4j.extend.PatternLayout_zh"> 
				<param name="ConversionPattern" value="[%d{ISO8601}] %-5p %c %m%n"/>
			</layout> 
		</appender> 
		异步测试，当日志达到缓存区大小时候执行所包的appender 
		<appender name="ASYNC_test" class="org.apache.log4j.AsyncAppender"> 
			<param name="BufferSize" value="10"/> 
			<appender-ref ref="EMAIL_QQ"/>
		</appender>
		<category name="com" additivity="false">
			<level value="ALL" />
			<appender-ref ref="ASYNC_test" />
		</category>			
		
	-->
	
	<!-- 设置所有包的通道-->
	<root>   
    <!-- root 整体设置过滤优先级，如果appender 没有设置filter或Threshold 默认采用该级别，定义的logger不在其中（即不会被过滤掉）。 -->  
       <priority value="ALL" />
	   <appender-ref ref="console" /> 
	   <appender-ref ref="filelog_error" /> 
	   <appender-ref ref="filelog_info" /> 
    </root> 
    
</log4j:configuration>  